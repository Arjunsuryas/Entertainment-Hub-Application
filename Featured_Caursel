import React, { useState, useEffect } from 'react';
import { ChevronLeft, ChevronRight, Play, Info } from 'lucide-react';

interface FeaturedCarouselProps {
  onPlayFeatured: (id: number) => void;
  onInfoFeatured: (id: number) => void;
}
const featuredContent = [
  {
    id: 1,
    title: 'Avatar: The Way of Water',
    description: 'Jake Sully lives with his newfound family formed on the extrasolar moon Pandora.',
    image: 'https://images.pexels.com/photos/1117132/pexels-photo-1117132.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1',
    genre: 'Sci-Fi Adventure',
    rating: 8.2,
  },
  {
    id: 2,
    title: 'Spotify Premium',
    description: 'Listen to millions of songs ad-free with premium sound quality.',
    image: 'https://images.pexels.com/photos/1763075/pexels-photo-1763075.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1',
    genre: 'Music Streaming',
    rating: 9.1,
  },
  {
    id: 3,
    title: 'Cyberpunk 2077',
    description: 'An open-world action-adventure story set in Night City, a megalopolis obsessed with power.',
    image: 'https://images.pexels.com/photos/442576/pexels-photo-442576.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1',
    genre: 'RPG Gaming',
    rating: 8.7,
  },
];

const FeaturedCarousel: React.FC<FeaturedCarouselProps> = ({ onPlayFeatured, onInfoFeatured }) => {
  const [currentSlide, setCurrentSlide] = useState(0);

  useEffect(() => {
    const timer = setInterval(() => {
      setCurrentSlide((prev) => (prev + 1) % featuredContent.length);
    }, 5000);

    return () => clearInterval(timer);
  }, []);

  const nextSlide = () => {
    setCurrentSlide((prev) => (prev + 1) % featuredContent.length);
  };

  const prevSlide = () => {
    setCurrentSlide((prev) => (prev - 1 + featuredContent.length) % featuredContent.length);
  };

  const current = featuredContent[currentSlide];

  return (
    <div className="relative h-96 md:h-[500px] overflow-hidden rounded-2xl mb-8">
      {/* Background Image */}
      <div
        className="absolute inset-0 transition-all duration-700 ease-in-out"
        style={{
          backgroundImage: `url(${current.image})`,
          backgroundSize: 'cover',
          backgroundPosition: 'center',
        }}
      >
        {/* Overlay */}
        <div className="absolute inset-0 bg-gradient-to-r from-black/70 via-black/50 to-transparent" />
      </div>

      {/* Content */}
      <div className="relative z-10 h-full flex items-center px-6 md:px-12">
        <div className="max-w-lg">
          <div className="mb-4">
            <span className="bg-gradient-to-r from-teal-400 to-cyan-400 text-black px-3 py-1 rounded-full text-sm font-semibold">
              {current.genre}
            </span>
          </div>
          
          <h1 className="text-3xl md:text-5xl font-bold text-white mb-4 leading-tight">
            {current.title}
          </h1>
          
          <p className="text-gray-200 text-lg mb-6 leading-relaxed">
            {current.description}
          </p>

          <div className="flex items-center space-x-4 mb-6">
            <div className="flex items-center space-x-1">
              <span className="text-yellow-400 text-lg">â˜…</span>
              <span className="text-white font-semibold">{current.rating}</span>
            </div>
          </div>

          <div className="flex space-x-4">
            <button 
              onClick={() => onPlayFeatured(current.id)}
              className="bg-gradient-to-r from-teal-500 to-cyan-500 hover:from-teal-600 hover:to-cyan-600 text-white px-8 py-3 rounded-lg font-semibold flex items-center space-x-2 transition-all duration-200 transform hover:scale-105"
            >
              <Play className="w-5 h-5" />
              <span>Play Now</span>
            </button>
            <button 
              onClick={() => onInfoFeatured(current.id)}
              className="bg-white/20 backdrop-blur-sm hover:bg-white/30 text-white px-8 py-3 rounded-lg font-semibold flex items-center space-x-2 transition-all duration-200"
            >
              <Info className="w-5 h-5" />
              <span>More Info</span>
            </button>
          </div>
        </div>
      </div>

      {/* Navigation Arrows */}
      <button
        onClick={prevSlide}
        className="absolute left-4 top-1/2 transform -translate-y-1/2 p-2 bg-black/50 hover:bg-black/70 text-white rounded-full transition-all duration-200"
      >
        <ChevronLeft className="w-6 h-6" />
      </button>
      
      <button
        onClick={nextSlide}
        className="absolute right-4 top-1/2 transform -translate-y-1/2 p-2 bg-black/50 hover:bg-black/70 text-white rounded-full transition-all duration-200"
      >
        <ChevronRight className="w-6 h-6" />
      </button>

      {/* Indicators */}
      <div className="absolute bottom-6 left-1/2 transform -translate-x-1/2 flex space-x-2">
        {featuredContent.map((_, index) => (
          <button
            key={index}
            onClick={() => setCurrentSlide(index)}
            className={`w-3 h-3 rounded-full transition-all duration-200 ${
              index === currentSlide ? 'bg-teal-400' : 'bg-white/50 hover:bg-white/70'
            }`}
          />
        ))}
      </div>
    </div>
  );
};

export default FeaturedCarousel;
